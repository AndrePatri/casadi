#pragma once

#include <panoc-alm/util/problem.hpp>

/// @addtogroup grp_ExternalProblemLoaders
/// @{

/// Load an objective function generated by CasADi.
std::function<pa::Problem::f_sig>
load_CasADi_objective(const char *so_name, const char *fun_name = "f");
/// Load the gradient of an objective function generated by CasADi.
std::function<pa::Problem::grad_f_sig>
load_CasADi_gradient_objective(const char *so_name,
                               const char *fun_name = "grad_f");
/// Load a constraint function generated by CasADi.
std::function<pa::Problem::g_sig>
load_CasADi_constraints(const char *so_name, const char *fun_name = "g");
/// Load the gradient-vector product of a constraint function generated by
/// CasADi.
std::function<pa::Problem::grad_g_prod_sig>
load_CasADi_gradient_constraints_prod(const char *so_name,
                                      const char *fun_name = "grad_g");
/// Load the Hessian of a Lagrangian function generated by CasADi.
std::function<pa::Problem::hess_L_sig>
load_CasADi_hessian_lagrangian(const char *so_name,
                               const char *fun_name = "hess_L");
/// Load the Hessian-vector product of a Lagrangian function generated by
/// CasADi.
std::function<pa::Problem::hess_L_prod_sig>
load_CasADi_hessian_lagrangian_prod(const char *so_name,
                                    const char *fun_name = "hess_L_prod");

/// @}
