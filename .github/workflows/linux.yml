name: Linux Binaries

on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'
  release:
    types: ['released', 'prereleased']

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/tttapa/${{ matrix.container }}:gcc11-py3.10
    strategy:
      matrix:
        include:
          - container: 'alpaqa-build'
            suffix: ''
          - container: 'alpaqa-build-static'
            suffix: '-with-static-casadi'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Configure
      run: |
        cmake -B package -S. \
          -G "Ninja Multi-Config" \
          -D BUILD_SHARED_LIBS=On \
          -D CMAKE_POSITION_INDEPENDENT_CODE=On \
          -D ALPAQA_WITH_EXAMPLES=Off \
          -D ALPAQA_WITH_TESTS=Off \
          -D ALPAQA_WARNINGS_AS_ERRORS=On \
          -D ALPAQA_WITH_QUAD_PRECISION=On \
          -D ALPAQA_WITH_CASADI=On
    - name: Build Release
      run: |
        cmake --build package --config Release -j
    - name: Build Debug
      run: |
        cmake --build package --config Debug -j
    - name: Package
      run: |
        cpack -G 'TGZ;DEB' -C "Release;Debug"
      working-directory: package
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: alpaqa-linux${{ matrix.suffix }}
        path: |
          package/alpaqa*.tar.gz
          package/alpaqa*.deb

  test:
    needs: [build]
    runs-on: ubuntu-latest
    container: ghcr.io/tttapa/${{ matrix.container }}:gcc11-py3.10
    strategy:
      matrix:
        include:
          - container: 'alpaqa-test'
            suffix: ''
          - container: 'alpaqa-test-static'
            suffix: '-with-static-casadi'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install CasADi, NumPy
      run: python3 -m pip install casadi numpy
    - name: Download
      uses: actions/download-artifact@v2
      with:
        name: alpaqa-linux${{ matrix.suffix }}
        path: package
    - name: Install
      run: |
        tar xzf package/alpaqa*.tar.gz --strip-components 1 \
          -C /usr/local
        ldconfig
    - name: Build examples (Release)
      run: |
        cmake -B build-examples -S examples \
          -G "Ninja Multi-Config"
        cmake --build build-examples -j --config Release
    - name: Run examples (Release)
      run: |
        ./build-examples/Presentation/Cpp/Release/presentation-cpp
    - name: Build examples (Debug)
      run: |
        cmake --build build-examples -j --config Debug
    - name: Run examples (Debug)
      run: |
        ./build-examples/Presentation/Cpp/Debug/presentation-cpp
    - name: Build tests (Release)
      run: |
        cmake -B build-tests -S test \
          -G "Ninja Multi-Config"
        cmake --build build-tests -j --config Release
    - name: Run tests (Release)
      run: |
        cmake --build build-tests -t test --config Release
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - name: Build tests (Debug)
      run: |
        cmake --build build-tests -j --config Debug
    - name: Run tests (Debug)
      run: |
        cmake --build build-tests -t test --config Debug
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
    - name: Upload (Release)
      uses: actions/upload-artifact@v2
      with:
        name: alpaqa-linux${{ matrix.suffix }}-test-examples-release
        path: |
          build-examples/Presentation/Cpp/Release/presentation-cpp
          build-tests/Release/tests
    - name: Upload (Debug)
      uses: actions/upload-artifact@v2
      with:
        name: alpaqa-linux${{ matrix.suffix }}-test-examples-debug
        path: |
          build-examples/Presentation/Cpp/Debug/presentation-cpp
          build-tests/Debug/tests

  release:
    if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - name: Download
      uses: actions/download-artifact@v2
      with:
        name: alpaqa-linux
        path: package
    - name: Download
      uses: actions/download-artifact@v2
      with:
        name: alpaqa-linux-with-static-casadi
        path: package-static
    - name: Rename files
      shell: bash
      working-directory: package-static
      run: |
        for f in alpaqa*; do
          mv "$f" "${f/alpaqa/alpaqa-with-static-casadi}"
        done
    - name: Release
      uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
      with:
        files: |
          package/alpaqa*.tar.gz
          package/alpaqa*.deb
          package-static/alpaqa*.tar.gz
          package-static/alpaqa*.deb
