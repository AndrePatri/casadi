name: source_package

on: push


jobs:
  swig:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
          registry: ghcr.io
          username: jgillis
          password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: generate Python 2
      run: >
        docker run --rm -v`pwd`:/local ghcr.io/casadi/ci-swig:latest /bin/bash -c
        "mkdir build && cd build && cmake -DWITH_SELFCONTAINED=ON -DWITH_PYTHON=ON -DSWIG_EXPORT=ON  .. && make python_source && cd .. && rm -rf build"
        
    - name: generate Python 3
      run: >
        docker run --rm -v`pwd`:/local ghcr.io/casadi/ci-swig:latest /bin/bash -c
        "mkdir build && cd build && cmake -DWITH_SELFCONTAINED=ON -DWITH_PYTHON3=ON -DWITH_PYTHON=ON -DSWIG_EXPORT=ON  .. && make python_source && cd .. && rm -rf build"

    - name: generate Matlab
      run: >
        docker run --rm -v`pwd`:/local ghcr.io/casadi/ci-swig:latest /bin/bash -c
        "mkdir build && cd build && cmake -DWITH_SELFCONTAINED=ON -DWITH_MATLAB=ON -DSWIG_EXPORT=ON  .. && make matlab_source && cd .. && rm -rf build"
    
    - name: set CMAKE default options
      run: |
         sed -i 's/option(SWIG_IMPORT "Export SWIG" OFF)/option(SWIG_IMPORT "Import SWIG" ON)/g' CMakeLists.txt

    - name: build archives
      run: |
        zip -rq ../casadi_source.zip . --exclude '.*' --exclude '*/.*' --exclude 'appveyor.yml'
        mv ../casadi_source.zip casadi_source.zip
      
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: casadi_source_wrapper
        path: casadi_source.zip
  core-manylinux1:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch: [x64,x86]
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Setup dockcross
        run: |
          export ARCH=manylinux1-${{ matrix.arch }}
          docker pull dockcross/$ARCH:latest
          docker run --rm dockcross/$ARCH:latest > dockcross
          chmod +x dockcross
          pwd
          ls -al dockcross
      - name: Build
        run: |
          pwd
          ls -al
          ./dockcross cmake -Bbuild -DWITH_SELFCONTAINED=ON -H.
          ./dockcross cmake --build build -v
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ github.job }}-${{ matrix.arch}}
          path: build
          retention-days: 1
          
  core-macos10_15:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Build
        run: |
          cmake -Bbuild -DWITH_SELFCONTAINED=ON -H.
          cmake --build build -v
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ github.job }}
          path: build
          retention-days: 1
          
  core-dockcross:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        target: [manylinux2014-x64,manylinux2014-x86,manylinux2014-aarch64,windows-shared-x64-posix,windows-shared-x64,windows-static-x64,windows-static-x64-posix]
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Setup dockcross
        run: |
          docker pull dockcross/${{ matrix.target }}:latest
          docker run --rm dockcross/${{ matrix.target }} > dockcross
          chmod +x dockcross
          pwd
          ls -al dockcross
      - name: Build
        run: |
          pwd
          ls -al
          ./dockcross cmake -Bbuild -DWITH_SELFCONTAINED=ON -H.
          ./dockcross cmake --build build -v
      - uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ github.job }}-${{ matrix.target}}
          path: build
          retention-days: 1
          
  interfaces-manylinux1_x86_64:
    needs: [core-manylinux1]
    runs-on: ubuntu-20.04
    steps:
      - run: echo "hello"
      
  frontend_python-manylinux1:
    needs: [core-manylinux1,swig]
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arch: [x64,x86]
        py2: [27,35,36,37,38,39]
    steps:
      - run: ls
      - uses: actions/download-artifact@v2
        with:
          name: casadi_source_wrapper
      - name: Unpack source
        run: unzip casadi_source.zip
      - run: ls
      - run: cat CMakeLists.txt
      - uses: actions/download-artifact@v2
        with:
          name: core-manylinux1-${{ matrix.arch }}
          path: build
      - name: Setup dockcross
        run: |
          export ARCH=manylinux1-${{ matrix.arch }}
          docker pull dockcross/$ARCH:latest
          docker run --rm dockcross/$ARCH:latest > dockcross
          chmod +x dockcross
      - run: |
          echo -n "PYTHON_INCLUDE_DIR=" >> $GITHUB_ENV && ./dockcross bash -c "ls -d /opt/python/cp${{ matrix.py2 }}*/include/python* | head -n 1" >> $GITHUB_ENV && tail $GITHUB_ENV
      - name: Build
        run: |
          pwd
          ls -al
          ./dockcross cmake -Bbuild -DWITH_PYTHON=ON -DPYTHON_INCLUDE_DIR=${{ env.PYTHON_INCLUDE_DIR }} -USWIG_IMPORT -H.
          ./dockcross cmake --build build -v
      - run: echo "hello"
      
  frontend_matlab-manylinux1_x86_64:
    needs: [core-manylinux1,swig]
    runs-on: ubuntu-20.04
    steps:
      - run: echo "hello"
      
  linux-python:
    needs: [interfaces-manylinux1_x86_64,frontend_python-manylinux1]
    runs-on: ubuntu-20.04
    steps:
    - run: echo "hello"
    
  windows_matlab:
    runs-on: windows-2016
    needs: swig
    if: false
    env:
      bitness: 64
      compiler: vs2017
    

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: casadi_source_wrapper

    - uses: meco-group/mockups@master
      with:
        tag: win${{ENV.bitness}}_${{ENV.compiler}}

    - name: Unpack source
      run: unzip casadi_source.zip

    - name: Dir source
      run: echo ${{ENV.MATLAB_ROOT}}

    - name : cmake
      run: |
          cmake -B ${{github.workspace}}/build -G "Visual Studio 15 2017" -A x64 -DWITH_SELFCONTAINED=ON -DWITH_MATLAB=ON -DMATLAB_ROOT=${{ENV.MATLAB_ROOT}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install
          cmake --build ${{github.workspace}}/build --target install --config Release

    - name: build archives
      run: |
        7z a ${{github.workspace}}/casadi_windows_matlab.zip ${{github.workspace}}/install/*
      
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: casadi_windows_matlab
        path: ${{github.workspace}}/casadi_windows_matlab.zip
      
